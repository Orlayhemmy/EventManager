{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Events Manager",
    "description": "API documentation for an event manager app"
  },
  "basePath": "/api/v1",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "UserToken": {
      "type": "apiKey",
      "in": "header",
      "name": "x-access-token"
    }
  },
  "paths": {
    "/centers": {
      "post": {
        "tags": ["Admin"],
        "summary": "Creates a new center and stores it to the database.r",
        "description": "Creates a new center and stores it to the database.",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "centerName",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "facilities",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "imageUrl",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "cost",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "capacity",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Access denied. You are not logged in"
          },
          "409": {
            "description": "Conflict, center already exist"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "get": {
        "tags": ["User"],
        "summary": "Get all the centers in the database",
        "description": "Get all the centers in the database",
        "security": [
          {
            "UserToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/centers/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "Updates the details of a center in the database",
        "description": "Updates the details of a center in the database",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "centerName",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "location",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "facilities",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "imageUrl",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "cost",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "capacity",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Access denied. You are not logged in"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "get": {
        "tags": ["Admin"],
        "summary": "Get all the centers in the database",
        "description": "Get all the centers in the database",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "delete the center with the id from the database",
        "description": "delete the center with the id from the database",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/centerEvents/{id}": {
      "get": {
        "tags": ["Admin"],
        "summary": "Gets all events booked to a center",
        "description": "Gets all events booked to a center",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/approveEvent/{id}": {
      "put": {
        "tags": ["Admin"],
        "summary": "An admin Approves an event which a user registers on a center",
        "description": "An admin Approves an event which a user registers on a center",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": ["User"],
        "summary": "Creates a new user and stores the information to the database.",
        "description":
          "Creates a new user and stores the information to the database.",
        "parameters": [
          {
            "in": "formData",
            "name": "fullname",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "format": "email",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "format": "password",
            "required": true
          },
          {
            "in": "formData",
            "name": "retypePass",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Username or email taken"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User"],
        "summary": "Allows a user to log in to the application",
        "description":
          "Allows a user to log in to the application",
        "parameters": [
          {
            "in": "formData",
            "name": "loginEmail",
            "type": "string",
            "format": "email",
            "required": true
          },
          {
            "in": "formData",
            "name": "loginPassword",
            "type": "string",
            "format": "password",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Incorrect username or email"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/sendmail": {
      "post": {
        "tags": ["Utils"],
        "summary": "Send mail when a user has signed up",
        "description":
          "Send mail when a user has signed up",
        "parameters": [
          {
            "in": "formData",
            "name": "email",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "message",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "title",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/passwordcheck": {
      "post": {
        "tags": ["Utils"],
        "summary": "Check users password in the database to confirm its validity when the user wants to change his password",
        "description":
          "Check users password in the database to confirm its validity when the user wants to change his password",
          "security": [
            {
              "UserToken": []
            }
          ],
          "parameters": [
          {
            "in": "formData",
            "name": "oldPassword",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/newpassword": {
      "post": {
        "tags": ["User"],
        "summary": "Change the user's the old password with a new one",
        "description":
          "Change the user's the old password with a new one",
          "security": [
            {
              "UserToken": []
            }
          ],
          "parameters": [
          {
            "in": "formData",
            "name": "newPassword",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/checkDate": {
      "post": {
        "tags": ["Utils"],
        "summary": "Check the date a user picked when booking a center to confirm if it is available",
        "description":
          "Check the date a user picked when booking a center to confirm if it is available",
          "security": [
            {
              "UserToken": []
            }
          ],
          "parameters": [
          {
            "in": "formData",
            "name": "bookedDate",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/eventsbookedcount": {
      "get": {
        "tags": ["Utils"],
        "summary": "Gets the users events booked count",
        "description": "Gets the users events booked count",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/events": {
      "post": {
        "tags": ["User"],
        "summary": "Creates a new events and stores it to the database.",
        "description": "Creates a new events and stores it to the database.",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "eventTitle",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "centerId",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "bookedDate",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Access denied. You are not logged in"
          },
          "409": {
            "description":
              "Conflict, center is already booked for the date selected"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/events/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Gets the specified event by the user",
        "description": "Gets the specified event by the user",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "delete the event with the id",
        "description": "delete the event with the id",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "tags": ["User"],
        "summary": "Modify the details of the specified event",
        "description": "Modify the details of the specified event",
        "security": [
          {
            "UserToken": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "required": true
          },
          {
            "in": "formData",
            "name": "eventTitle",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "centerId",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "bookedDate",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "formData",
            "name": "description",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/userEvents": {
      "get": {
        "tags": ["User"],
        "summary": "Gets all events booked to a center",
        "description": "Gets all events booked to a center",
        "security": [
          {
            "UserToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No event found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/activity": {
      "get": {
        "tags": ["Utils"],
        "summary": "Gets all the activities the user have performed",
        "description": "Gets all the activities the user have performed",
        "security": [
          {
            "UserToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No activity found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/adminactivity": {
      "get": {
        "tags": ["Utils"],
        "summary": "Gets all the activities the admin have performed",
        "description": "Gets all the activities the admin have performed",
        "security": [
          {
            "UserToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No activity found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["email", "fullname", "password"],
      "properties": {
        "fullname": {
          "type": "string",
          "uniqueItems": false
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        }
      }
    },
    "Event": {
      "required": ["eventTitle", "description", "bookedDate", "userId", "centerId"],
      "properties": {
        "eventTitle": {
          "type": "string"
        },
        "description": {
          "type": "text"
        },
        "bookedDate": {
          "type": "dateonly"
        },
        "centerId": {
          "type": "integer"
        },
        "userId": {
          "type": "integer"
        }
      }
    },
    "Center": {
      "required": ["centerName", "location", "capacity", "cost", "description", "imageUrl", "facilities"],
      "properties": {
        "centerName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "capacity": {
          "type": "integer"
        },
        "cost": {
          "type": "float"
        },
        "imageUrl": {
          "type": "string"
        },
        "facilities": {
          "type": "array"
        },
        "description": {
          "type": "text"
        },
        "status": {
          "type": "boolean"
        }
      }
    },
    "Activity": {
      "required": ["description","userId", "centerId"],
      "properties": {
        "userId": {
          "type": "integer"
        },
        "eventId": {
          "type": "integer"
        },
        "centerId": {
          "type": "integer"
        },
        "reason": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "suggestion": {
          "type": "string"
        }
      }
    }
  }
}
