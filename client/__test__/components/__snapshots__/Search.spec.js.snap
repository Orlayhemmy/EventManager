// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Approve Event Component should render component without error 1`] = `
<div
  className="search-nav"
  id="search-nav"
>
  <div
    className="search-field"
  >
    <p
      className="subtitle"
    >
      <i
        className="fa fa-filter green"
      />
       filter centers by
    </p>
    <div
      className="input-group pb-2 pt-3"
    >
      <div
        className="help-block"
      />
      <div
        className="input-group-prepend"
      >
        <span
          className="input-group-text"
        >
          <i
            className="fa fa-map-marker"
          />
        </span>
      </div>
      <input
        className="form-control"
        id="location"
        onChange={undefined}
        placeholder="location"
        type="text"
        value=""
      />
    </div>
    <div
      className="input-group pb-2"
    >
      <div
        className="help-block"
      />
      <div
        className="input-group-prepend"
      >
        <span
          className="input-group-text"
        >
          <i
            className="fa fa-cog"
          />
        </span>
      </div>
      <input
        className="form-control"
        id="facilities"
        onChange={undefined}
        placeholder="facilities"
        type="text"
        value=""
      />
    </div>
    <div
      className="input-group pb-2"
    >
      <select
        className="form-control"
        id="capacityType"
        onChange={undefined}
      >
        <option>
          capacity conditions
        </option>
        <option
          value="greater"
        >
          greater &gt;
        </option>
        <option
          value="lesser"
        >
          lesser &lt;
        </option>
        <option
          value="equal"
        >
          equal =
        </option>
        <option
          value="between"
        >
          between &lt;&gt;
        </option>
      </select>
    </div>
    <div
      className="input-group pb-2"
      id="otherConditions"
    >
      <div
        className="help-block"
      />
      <div
        className="input-group-prepend"
      >
        <span
          className="input-group-text"
        >
          <i
            className="fa fa-users"
          />
        </span>
      </div>
      <input
        className="form-control"
        id="capacity"
        onChange={undefined}
        placeholder="capacity"
        type="number"
        value=""
      />
    </div>
    <div
      className="pb-2"
      hidden={true}
      id="btwValue"
    >
      <div
        className="input-group"
      >
        <div
          className="help-block"
        />
        <div
          className="input-group-prepend"
        >
          <span
            className="input-group-text"
          >
            <i
              className="fa fa-users"
            />
          </span>
        </div>
        <input
          className="form-control"
          id="btwValue"
          onChange={undefined}
          placeholder="Capacity"
          type="number"
          value=""
        />
      </div>
    </div>
    <div
      className="input-group pt-2"
      id="submit"
    >
      <button
        className="btn btn-success"
        id="submit"
        onClick={[MockFunction]}
        type="button"
      >
        <i
          className="fa fa-search"
        >
           Search
        </i>
      </button>
      <button
        className="btn btn-danger fr"
        id="reset"
        onClick={[Function]}
        type="button"
      >
        <i
          className="fa fa-sync-alt"
        >
           Reset
        </i>
      </button>
    </div>
  </div>
</div>
`;

exports[`Approve Event Component should render component without error 2`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchForm
    criteria={
      Object {
        "btwValue": "",
        "capacity": "",
        "capacityType": "between",
        "errors": "",
        "facilities": "",
        "location": "",
      }
    }
    onChange={[MockFunction]}
    search={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="search-field"
      >
        <p
          className="subtitle"
        >
          <i
            className="fa fa-filter green"
          />
           filter centers by
        </p>
        <div
          className="input-group pb-2 pt-3"
        >
          <div
            className="help-block"
          />
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
            >
              <i
                className="fa fa-map-marker"
              />
            </span>
          </div>
          <input
            className="form-control"
            id="location"
            onChange={[MockFunction]}
            placeholder="location"
            type="text"
            value=""
          />
        </div>
        <div
          className="input-group pb-2"
        >
          <div
            className="help-block"
          />
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
            >
              <i
                className="fa fa-cog"
              />
            </span>
          </div>
          <input
            className="form-control"
            id="facilities"
            onChange={[MockFunction]}
            placeholder="facilities"
            type="text"
            value=""
          />
        </div>
        <div
          className="input-group pb-2"
        >
          <select
            className="form-control"
            id="capacityType"
            onChange={[MockFunction]}
          >
            <option>
              capacity conditions
            </option>
            <option
              value="greater"
            >
              greater &gt;
            </option>
            <option
              value="lesser"
            >
              lesser &lt;
            </option>
            <option
              value="equal"
            >
              equal =
            </option>
            <option
              value="between"
            >
              between &lt;&gt;
            </option>
          </select>
        </div>
        <div
          className="input-group pb-2"
          id="otherConditions"
        >
          <div
            className="help-block"
          />
          <div
            className="input-group-prepend"
          >
            <span
              className="input-group-text"
            >
              <i
                className="fa fa-users"
              />
            </span>
          </div>
          <input
            className="form-control"
            id="capacity"
            onChange={[MockFunction]}
            placeholder="capacity"
            type="number"
            value=""
          />
        </div>
        <div
          className="pb-2"
          hidden=""
          id="btwValue"
        >
          <div
            className="input-group"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-users"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="btwValue"
              onChange={[MockFunction]}
              placeholder="Capacity"
              type="number"
              value=""
            />
          </div>
        </div>
        <div
          className="input-group pt-2"
          id="submit"
        >
          <button
            className="btn btn-success"
            id="submit"
            onClick={[MockFunction]}
            type="button"
          >
            <i
              className="fa fa-search"
            >
               Search
            </i>
          </button>
          <button
            className="btn btn-danger fr"
            id="reset"
            onClick={[Function]}
            type="button"
          >
            <i
              className="fa fa-sync-alt"
            >
               Reset
            </i>
          </button>
        </div>
      </div>,
      "className": "search-nav",
      "id": "search-nav",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="subtitle"
          >
            <i
              className="fa fa-filter green"
            />
             filter centers by
          </p>,
          <div
            className="input-group pb-2 pt-3"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-map-marker"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="location"
              onChange={[MockFunction]}
              placeholder="location"
              type="text"
              value=""
            />
          </div>,
          <div
            className="input-group pb-2"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-cog"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="facilities"
              onChange={[MockFunction]}
              placeholder="facilities"
              type="text"
              value=""
            />
          </div>,
          <div
            className="input-group pb-2"
          >
            <select
              className="form-control"
              id="capacityType"
              onChange={[MockFunction]}
            >
              <option>
                capacity conditions
              </option>
              <option
                value="greater"
              >
                greater &gt;
              </option>
              <option
                value="lesser"
              >
                lesser &lt;
              </option>
              <option
                value="equal"
              >
                equal =
              </option>
              <option
                value="between"
              >
                between &lt;&gt;
              </option>
            </select>
          </div>,
          <div
            className="input-group pb-2"
            id="otherConditions"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-users"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="capacity"
              onChange={[MockFunction]}
              placeholder="capacity"
              type="number"
              value=""
            />
          </div>,
          <div
            className="pb-2"
            hidden=""
            id="btwValue"
          >
            <div
              className="input-group"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="btwValue"
                onChange={[MockFunction]}
                placeholder="Capacity"
                type="number"
                value=""
              />
            </div>
          </div>,
          <div
            className="input-group pt-2"
            id="submit"
          >
            <button
              className="btn btn-success"
              id="submit"
              onClick={[MockFunction]}
              type="button"
            >
              <i
                className="fa fa-search"
              >
                 Search
              </i>
            </button>
            <button
              className="btn btn-danger fr"
              id="reset"
              onClick={[Function]}
              type="button"
            >
              <i
                className="fa fa-sync-alt"
              >
                 Reset
              </i>
            </button>
          </div>,
        ],
        "className": "search-field",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-filter green"
              />,
              " filter centers by",
            ],
            "className": "subtitle",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-filter green",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            " filter centers by",
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="help-block"
              />,
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-map-marker"
                  />
                </span>
              </div>,
              <input
                className="form-control"
                id="location"
                onChange={[MockFunction]}
                placeholder="location"
                type="text"
                value=""
              />,
            ],
            "className": "input-group pb-2 pt-3",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "help-block",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-map-marker"
                  />
                </span>,
                "className": "input-group-prepend",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-map-marker"
                  />,
                  "className": "input-group-text",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-map-marker",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "location",
                "onChange": [MockFunction],
                "placeholder": "location",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="help-block"
              />,
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-cog"
                  />
                </span>
              </div>,
              <input
                className="form-control"
                id="facilities"
                onChange={[MockFunction]}
                placeholder="facilities"
                type="text"
                value=""
              />,
            ],
            "className": "input-group pb-2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "help-block",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-cog"
                  />
                </span>,
                "className": "input-group-prepend",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-cog"
                  />,
                  "className": "input-group-text",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-cog",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "facilities",
                "onChange": [MockFunction],
                "placeholder": "facilities",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <select
              className="form-control"
              id="capacityType"
              onChange={[MockFunction]}
            >
              <option>
                capacity conditions
              </option>
              <option
                value="greater"
              >
                greater &gt;
              </option>
              <option
                value="lesser"
              >
                lesser &lt;
              </option>
              <option
                value="equal"
              >
                equal =
              </option>
              <option
                value="between"
              >
                between &lt;&gt;
              </option>
            </select>,
            "className": "input-group pb-2",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <option>
                  capacity conditions
                </option>,
                <option
                  value="greater"
                >
                  greater &gt;
                </option>,
                <option
                  value="lesser"
                >
                  lesser &lt;
                </option>,
                <option
                  value="equal"
                >
                  equal =
                </option>,
                <option
                  value="between"
                >
                  between &lt;&gt;
                </option>,
              ],
              "className": "form-control",
              "id": "capacityType",
              "onChange": [MockFunction],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "capacity conditions",
                },
                "ref": null,
                "rendered": "capacity conditions",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "greater >",
                  "value": "greater",
                },
                "ref": null,
                "rendered": "greater >",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "lesser <",
                  "value": "lesser",
                },
                "ref": null,
                "rendered": "lesser <",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "equal =",
                  "value": "equal",
                },
                "ref": null,
                "rendered": "equal =",
                "type": "option",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "between <>",
                  "value": "between",
                },
                "ref": null,
                "rendered": "between <>",
                "type": "option",
              },
            ],
            "type": "select",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="help-block"
              />,
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>
              </div>,
              <input
                className="form-control"
                id="capacity"
                onChange={[MockFunction]}
                placeholder="capacity"
                type="number"
                value=""
              />,
            ],
            "className": "input-group pb-2",
            "id": "otherConditions",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "help-block",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>,
                "className": "input-group-prepend",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-users"
                  />,
                  "className": "input-group-text",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "fa fa-users",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "id": "capacity",
                "onChange": [MockFunction],
                "placeholder": "capacity",
                "type": "number",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="input-group"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="btwValue"
                onChange={[MockFunction]}
                placeholder="Capacity"
                type="number"
                value=""
              />
            </div>,
            "className": "pb-2",
            "hidden": "",
            "id": "btwValue",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="help-block"
                />,
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>
                </div>,
                <input
                  className="form-control"
                  id="btwValue"
                  onChange={[MockFunction]}
                  placeholder="Capacity"
                  type="number"
                  value=""
                />,
              ],
              "className": "input-group",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "help-block",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>,
                  "className": "input-group-prepend",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fa fa-users"
                    />,
                    "className": "input-group-text",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-users",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "btwValue",
                  "onChange": [MockFunction],
                  "placeholder": "Capacity",
                  "type": "number",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                className="btn btn-success"
                id="submit"
                onClick={[MockFunction]}
                type="button"
              >
                <i
                  className="fa fa-search"
                >
                   Search
                </i>
              </button>,
              <button
                className="btn btn-danger fr"
                id="reset"
                onClick={[Function]}
                type="button"
              >
                <i
                  className="fa fa-sync-alt"
                >
                   Reset
                </i>
              </button>,
            ],
            "className": "input-group pt-2",
            "id": "submit",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fa fa-search"
                >
                   Search
                </i>,
                "className": "btn btn-success",
                "id": "submit",
                "onClick": [MockFunction],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Search",
                  "className": "fa fa-search",
                },
                "ref": null,
                "rendered": " Search",
                "type": "i",
              },
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <i
                  className="fa fa-sync-alt"
                >
                   Reset
                </i>,
                "className": "btn btn-danger fr",
                "id": "reset",
                "onClick": [Function],
                "type": "button",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " Reset",
                  "className": "fa fa-sync-alt",
                },
                "ref": null,
                "rendered": " Reset",
                "type": "i",
              },
              "type": "button",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="search-field"
        >
          <p
            className="subtitle"
          >
            <i
              className="fa fa-filter green"
            />
             filter centers by
          </p>
          <div
            className="input-group pb-2 pt-3"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-map-marker"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="location"
              onChange={[MockFunction]}
              placeholder="location"
              type="text"
              value=""
            />
          </div>
          <div
            className="input-group pb-2"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-cog"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="facilities"
              onChange={[MockFunction]}
              placeholder="facilities"
              type="text"
              value=""
            />
          </div>
          <div
            className="input-group pb-2"
          >
            <select
              className="form-control"
              id="capacityType"
              onChange={[MockFunction]}
            >
              <option>
                capacity conditions
              </option>
              <option
                value="greater"
              >
                greater &gt;
              </option>
              <option
                value="lesser"
              >
                lesser &lt;
              </option>
              <option
                value="equal"
              >
                equal =
              </option>
              <option
                value="between"
              >
                between &lt;&gt;
              </option>
            </select>
          </div>
          <div
            className="input-group pb-2"
            id="otherConditions"
          >
            <div
              className="help-block"
            />
            <div
              className="input-group-prepend"
            >
              <span
                className="input-group-text"
              >
                <i
                  className="fa fa-users"
                />
              </span>
            </div>
            <input
              className="form-control"
              id="capacity"
              onChange={[MockFunction]}
              placeholder="capacity"
              type="number"
              value=""
            />
          </div>
          <div
            className="pb-2"
            hidden=""
            id="btwValue"
          >
            <div
              className="input-group"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="btwValue"
                onChange={[MockFunction]}
                placeholder="Capacity"
                type="number"
                value=""
              />
            </div>
          </div>
          <div
            className="input-group pt-2"
            id="submit"
          >
            <button
              className="btn btn-success"
              id="submit"
              onClick={[MockFunction]}
              type="button"
            >
              <i
                className="fa fa-search"
              >
                 Search
              </i>
            </button>
            <button
              className="btn btn-danger fr"
              id="reset"
              onClick={[Function]}
              type="button"
            >
              <i
                className="fa fa-sync-alt"
              >
                 Reset
              </i>
            </button>
          </div>
        </div>,
        "className": "search-nav",
        "id": "search-nav",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="subtitle"
            >
              <i
                className="fa fa-filter green"
              />
               filter centers by
            </p>,
            <div
              className="input-group pb-2 pt-3"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-map-marker"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="location"
                onChange={[MockFunction]}
                placeholder="location"
                type="text"
                value=""
              />
            </div>,
            <div
              className="input-group pb-2"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-cog"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="facilities"
                onChange={[MockFunction]}
                placeholder="facilities"
                type="text"
                value=""
              />
            </div>,
            <div
              className="input-group pb-2"
            >
              <select
                className="form-control"
                id="capacityType"
                onChange={[MockFunction]}
              >
                <option>
                  capacity conditions
                </option>
                <option
                  value="greater"
                >
                  greater &gt;
                </option>
                <option
                  value="lesser"
                >
                  lesser &lt;
                </option>
                <option
                  value="equal"
                >
                  equal =
                </option>
                <option
                  value="between"
                >
                  between &lt;&gt;
                </option>
              </select>
            </div>,
            <div
              className="input-group pb-2"
              id="otherConditions"
            >
              <div
                className="help-block"
              />
              <div
                className="input-group-prepend"
              >
                <span
                  className="input-group-text"
                >
                  <i
                    className="fa fa-users"
                  />
                </span>
              </div>
              <input
                className="form-control"
                id="capacity"
                onChange={[MockFunction]}
                placeholder="capacity"
                type="number"
                value=""
              />
            </div>,
            <div
              className="pb-2"
              hidden=""
              id="btwValue"
            >
              <div
                className="input-group"
              >
                <div
                  className="help-block"
                />
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>
                </div>
                <input
                  className="form-control"
                  id="btwValue"
                  onChange={[MockFunction]}
                  placeholder="Capacity"
                  type="number"
                  value=""
                />
              </div>
            </div>,
            <div
              className="input-group pt-2"
              id="submit"
            >
              <button
                className="btn btn-success"
                id="submit"
                onClick={[MockFunction]}
                type="button"
              >
                <i
                  className="fa fa-search"
                >
                   Search
                </i>
              </button>
              <button
                className="btn btn-danger fr"
                id="reset"
                onClick={[Function]}
                type="button"
              >
                <i
                  className="fa fa-sync-alt"
                >
                   Reset
                </i>
              </button>
            </div>,
          ],
          "className": "search-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <i
                  className="fa fa-filter green"
                />,
                " filter centers by",
              ],
              "className": "subtitle",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "fa fa-filter green",
                },
                "ref": null,
                "rendered": null,
                "type": "i",
              },
              " filter centers by",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="help-block"
                />,
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-map-marker"
                    />
                  </span>
                </div>,
                <input
                  className="form-control"
                  id="location"
                  onChange={[MockFunction]}
                  placeholder="location"
                  type="text"
                  value=""
                />,
              ],
              "className": "input-group pb-2 pt-3",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "help-block",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-map-marker"
                    />
                  </span>,
                  "className": "input-group-prepend",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fa fa-map-marker"
                    />,
                    "className": "input-group-text",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-map-marker",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "location",
                  "onChange": [MockFunction],
                  "placeholder": "location",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="help-block"
                />,
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-cog"
                    />
                  </span>
                </div>,
                <input
                  className="form-control"
                  id="facilities"
                  onChange={[MockFunction]}
                  placeholder="facilities"
                  type="text"
                  value=""
                />,
              ],
              "className": "input-group pb-2",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "help-block",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-cog"
                    />
                  </span>,
                  "className": "input-group-prepend",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fa fa-cog"
                    />,
                    "className": "input-group-text",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-cog",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "facilities",
                  "onChange": [MockFunction],
                  "placeholder": "facilities",
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <select
                className="form-control"
                id="capacityType"
                onChange={[MockFunction]}
              >
                <option>
                  capacity conditions
                </option>
                <option
                  value="greater"
                >
                  greater &gt;
                </option>
                <option
                  value="lesser"
                >
                  lesser &lt;
                </option>
                <option
                  value="equal"
                >
                  equal =
                </option>
                <option
                  value="between"
                >
                  between &lt;&gt;
                </option>
              </select>,
              "className": "input-group pb-2",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option>
                    capacity conditions
                  </option>,
                  <option
                    value="greater"
                  >
                    greater &gt;
                  </option>,
                  <option
                    value="lesser"
                  >
                    lesser &lt;
                  </option>,
                  <option
                    value="equal"
                  >
                    equal =
                  </option>,
                  <option
                    value="between"
                  >
                    between &lt;&gt;
                  </option>,
                ],
                "className": "form-control",
                "id": "capacityType",
                "onChange": [MockFunction],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "capacity conditions",
                  },
                  "ref": null,
                  "rendered": "capacity conditions",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "greater >",
                    "value": "greater",
                  },
                  "ref": null,
                  "rendered": "greater >",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "lesser <",
                    "value": "lesser",
                  },
                  "ref": null,
                  "rendered": "lesser <",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "equal =",
                    "value": "equal",
                  },
                  "ref": null,
                  "rendered": "equal =",
                  "type": "option",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "between <>",
                    "value": "between",
                  },
                  "ref": null,
                  "rendered": "between <>",
                  "type": "option",
                },
              ],
              "type": "select",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="help-block"
                />,
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>
                </div>,
                <input
                  className="form-control"
                  id="capacity"
                  onChange={[MockFunction]}
                  placeholder="capacity"
                  type="number"
                  value=""
                />,
              ],
              "className": "input-group pb-2",
              "id": "otherConditions",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "help-block",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>,
                  "className": "input-group-prepend",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="fa fa-users"
                    />,
                    "className": "input-group-text",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "fa fa-users",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "id": "capacity",
                  "onChange": [MockFunction],
                  "placeholder": "capacity",
                  "type": "number",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="input-group"
              >
                <div
                  className="help-block"
                />
                <div
                  className="input-group-prepend"
                >
                  <span
                    className="input-group-text"
                  >
                    <i
                      className="fa fa-users"
                    />
                  </span>
                </div>
                <input
                  className="form-control"
                  id="btwValue"
                  onChange={[MockFunction]}
                  placeholder="Capacity"
                  type="number"
                  value=""
                />
              </div>,
              "className": "pb-2",
              "hidden": "",
              "id": "btwValue",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="help-block"
                  />,
                  <div
                    className="input-group-prepend"
                  >
                    <span
                      className="input-group-text"
                    >
                      <i
                        className="fa fa-users"
                      />
                    </span>
                  </div>,
                  <input
                    className="form-control"
                    id="btwValue"
                    onChange={[MockFunction]}
                    placeholder="Capacity"
                    type="number"
                    value=""
                  />,
                ],
                "className": "input-group",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": undefined,
                    "className": "help-block",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="input-group-text"
                    >
                      <i
                        className="fa fa-users"
                      />
                    </span>,
                    "className": "input-group-prepend",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <i
                        className="fa fa-users"
                      />,
                      "className": "input-group-text",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fa fa-users",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "i",
                    },
                    "type": "span",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "form-control",
                    "id": "btwValue",
                    "onChange": [MockFunction],
                    "placeholder": "Capacity",
                    "type": "number",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-success"
                  id="submit"
                  onClick={[MockFunction]}
                  type="button"
                >
                  <i
                    className="fa fa-search"
                  >
                     Search
                  </i>
                </button>,
                <button
                  className="btn btn-danger fr"
                  id="reset"
                  onClick={[Function]}
                  type="button"
                >
                  <i
                    className="fa fa-sync-alt"
                  >
                     Reset
                  </i>
                </button>,
              ],
              "className": "input-group pt-2",
              "id": "submit",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-search"
                  >
                     Search
                  </i>,
                  "className": "btn btn-success",
                  "id": "submit",
                  "onClick": [MockFunction],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Search",
                    "className": "fa fa-search",
                  },
                  "ref": null,
                  "rendered": " Search",
                  "type": "i",
                },
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="fa fa-sync-alt"
                  >
                     Reset
                  </i>,
                  "className": "btn btn-danger fr",
                  "id": "reset",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " Reset",
                    "className": "fa fa-sync-alt",
                  },
                  "ref": null,
                  "rendered": " Reset",
                  "type": "i",
                },
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
