// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin content should render the component without error 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AdminPanelPage
    auth={
      Object {
        "isAuth": true,
        "user": Object {
          "isAdmin": true,
        },
      }
    }
    getCenters={[MockFunction]}
    getNextCenters={[MockFunction]}
    searchValidation={[MockFunction]}
    viewCenterSelected={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Connect(SearchForm)
          criteria={
            Object {
              "btwValue": "",
              "capacity": "",
              "capacityType": "",
              "counter": 0,
              "errors": Object {},
              "facilities": "",
              "location": "",
            }
          }
          getCenters={[MockFunction]}
          id="search-nav"
          onChange={[Function]}
          search={[Function]}
        />,
        <Connect(DisplayCenters)
          counter={0}
          nextCenters={[Function]}
          path={undefined}
          searchNav={undefined}
          searchState={
            Object {
              "btwValue": "",
              "capacity": "",
              "capacityType": "",
              "counter": 0,
              "errors": Object {},
              "facilities": "",
              "location": "",
            }
          }
          showCenter={[Function]}
        />,
      ],
      "className": "container",
      "id": "admin-content",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "criteria": Object {
            "btwValue": "",
            "capacity": "",
            "capacityType": "",
            "counter": 0,
            "errors": Object {},
            "facilities": "",
            "location": "",
          },
          "getCenters": [MockFunction],
          "id": "search-nav",
          "onChange": [Function],
          "search": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "counter": 0,
          "nextCenters": [Function],
          "path": undefined,
          "searchNav": undefined,
          "searchState": Object {
            "btwValue": "",
            "capacity": "",
            "capacityType": "",
            "counter": 0,
            "errors": Object {},
            "facilities": "",
            "location": "",
          },
          "showCenter": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(SearchForm)
            criteria={
              Object {
                "btwValue": "",
                "capacity": "",
                "capacityType": "",
                "counter": 0,
                "errors": Object {},
                "facilities": "",
                "location": "",
              }
            }
            getCenters={[MockFunction]}
            id="search-nav"
            onChange={[Function]}
            search={[Function]}
          />,
          <Connect(DisplayCenters)
            counter={0}
            nextCenters={[Function]}
            path={undefined}
            searchNav={undefined}
            searchState={
              Object {
                "btwValue": "",
                "capacity": "",
                "capacityType": "",
                "counter": 0,
                "errors": Object {},
                "facilities": "",
                "location": "",
              }
            }
            showCenter={[Function]}
          />,
        ],
        "className": "container",
        "id": "admin-content",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "criteria": Object {
              "btwValue": "",
              "capacity": "",
              "capacityType": "",
              "counter": 0,
              "errors": Object {},
              "facilities": "",
              "location": "",
            },
            "getCenters": [MockFunction],
            "id": "search-nav",
            "onChange": [Function],
            "search": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "counter": 0,
            "nextCenters": [Function],
            "path": undefined,
            "searchNav": undefined,
            "searchState": Object {
              "btwValue": "",
              "capacity": "",
              "capacityType": "",
              "counter": 0,
              "errors": Object {},
              "facilities": "",
              "location": "",
            },
            "showCenter": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
