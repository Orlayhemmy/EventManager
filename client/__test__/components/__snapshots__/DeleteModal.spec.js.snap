// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Image upload should render the component without errors 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DeleteModal
    content="This is a delete modal"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="modal-dialog mt-y4"
      >
        <div
          className="modal-content"
        >
          <div
            className="form-inner text-center"
          >
            This is a delete modal
          </div>
        </div>
      </div>,
      "className": "modal hide",
      "id": "deleteModal",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal-content"
        >
          <div
            className="form-inner text-center"
          >
            This is a delete modal
          </div>
        </div>,
        "className": "modal-dialog mt-y4",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="form-inner text-center"
          >
            This is a delete modal
          </div>,
          "className": "modal-content",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "This is a delete modal",
            "className": "form-inner text-center",
          },
          "ref": null,
          "rendered": "This is a delete modal",
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal-dialog mt-y4"
        >
          <div
            className="modal-content"
          >
            <div
              className="form-inner text-center"
            >
              This is a delete modal
            </div>
          </div>
        </div>,
        "className": "modal hide",
        "id": "deleteModal",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="modal-content"
          >
            <div
              className="form-inner text-center"
            >
              This is a delete modal
            </div>
          </div>,
          "className": "modal-dialog mt-y4",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="form-inner text-center"
            >
              This is a delete modal
            </div>,
            "className": "modal-content",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "This is a delete modal",
              "className": "form-inner text-center",
            },
            "ref": null,
            "rendered": "This is a delete modal",
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
