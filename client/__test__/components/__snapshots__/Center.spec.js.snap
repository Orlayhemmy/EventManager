// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`display centers should render the component based 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DisplayCenters
    adminActivity={
      Object {
        "activities": Array [],
      }
    }
    auth={
      Object {
        "user": Object {
          "isAdmin": true,
        },
      }
    }
    centerIntro={[MockFunction]}
    eventCenter={
      Object {
        "paginatedCenters": Array [],
      }
    }
    getAdminActivity={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    getCenters={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "counter": 0,
            },
            0,
          ],
        ],
      }
    }
    searchState={
      Object {
        "counter": 0,
      }
    }
    userEvent={
      Object {
        "eventBookedCount": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="search-icon"
          id="search-centers"
        >
          <i
            className="fa fa-search"
          />
          <p
            className="tooltiptext"
          >
            Filter Centers
          </p>
        </div>,
        <div
          className="pagination-container"
          id="pagination-container"
        >
          <div>
             
            
          </div>
          <div
            className="inner-div"
          >
            <div
              id="goto-page"
              onClick={[Function]}
            >
              <input
                className="form-control"
                disabled={true}
                id="current-page"
                type="text"
                value={NaN}
              />
            </div>
            <div
              className="inner-item-div"
              id="inner-item-div"
            >
              <div
                className="inner-item"
              >
                <input
                  className="form-control w-1 ml-1"
                  id="goto"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="inner-item"
              >
                <input
                  className="btn btn-success page-btn ml-1"
                  onClick={[Function]}
                  type="button"
                  value="Go"
                />
              </div>
            </div>
          </div>
          <div>
             
            
          </div>
        </div>,
        <div
          id="centers"
        >
          <div
            className="section"
          >
            <div
              className="row wc"
            >
              <div
                className="col-lg-8 mr-3"
              >
                <div
                  className="emptyCenter img-fluid text-center ml-2 mt-2"
                >
                  <span>
                    <p
                      className="display-3"
                    >
                      No Center Found
                    </p>
                  </span>
                </div>
              </div>
              <div
                className="col-lg-3 p-2 ho"
              >
                <h2>
                  Notifications
                </h2>
              </div>
            </div>
          </div>
        </div>,
        <tour
          tour={[Function]}
        />,
        <DeleteModal
          content={
            <Delete
              onCancel={[Function]}
              onDelete={[Function]}
              title=""
            />
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="fa fa-search"
            />,
            <p
              className="tooltiptext"
            >
              Filter Centers
            </p>,
          ],
          "className": "search-icon",
          "id": "search-centers",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-search",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Filter Centers",
              "className": "tooltiptext",
            },
            "ref": null,
            "rendered": "Filter Centers",
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div>
               
              
            </div>,
            <div
              className="inner-div"
            >
              <div
                id="goto-page"
                onClick={[Function]}
              >
                <input
                  className="form-control"
                  disabled={true}
                  id="current-page"
                  type="text"
                  value={NaN}
                />
              </div>
              <div
                className="inner-item-div"
                id="inner-item-div"
              >
                <div
                  className="inner-item"
                >
                  <input
                    className="form-control w-1 ml-1"
                    id="goto"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="inner-item"
                >
                  <input
                    className="btn btn-success page-btn ml-1"
                    onClick={[Function]}
                    type="button"
                    value="Go"
                  />
                </div>
              </div>
            </div>,
            <div>
               
              
            </div>,
          ],
          "className": "pagination-container",
          "id": "pagination-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              "",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  id="goto-page"
                  onClick={[Function]}
                >
                  <input
                    className="form-control"
                    disabled={true}
                    id="current-page"
                    type="text"
                    value={NaN}
                  />
                </div>,
                <div
                  className="inner-item-div"
                  id="inner-item-div"
                >
                  <div
                    className="inner-item"
                  >
                    <input
                      className="form-control w-1 ml-1"
                      id="goto"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="inner-item"
                  >
                    <input
                      className="btn btn-success page-btn ml-1"
                      onClick={[Function]}
                      type="button"
                      value="Go"
                    />
                  </div>
                </div>,
              ],
              "className": "inner-div",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <input
                    className="form-control"
                    disabled={true}
                    id="current-page"
                    type="text"
                    value={NaN}
                  />,
                  "id": "goto-page",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "form-control",
                    "disabled": true,
                    "id": "current-page",
                    "type": "text",
                    "value": NaN,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div
                      className="inner-item"
                    >
                      <input
                        className="form-control w-1 ml-1"
                        id="goto"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>,
                    <div
                      className="inner-item"
                    >
                      <input
                        className="btn btn-success page-btn ml-1"
                        onClick={[Function]}
                        type="button"
                        value="Go"
                      />
                    </div>,
                  ],
                  "className": "inner-item-div",
                  "id": "inner-item-div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <input
                        className="form-control w-1 ml-1"
                        id="goto"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />,
                      "className": "inner-item",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "form-control w-1 ml-1",
                        "id": "goto",
                        "onChange": [Function],
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <input
                        className="btn btn-success page-btn ml-1"
                        onClick={[Function]}
                        type="button"
                        value="Go"
                      />,
                      "className": "inner-item",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "btn btn-success page-btn ml-1",
                        "onClick": [Function],
                        "type": "button",
                        "value": "Go",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              "",
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="section"
          >
            <div
              className="row wc"
            >
              <div
                className="col-lg-8 mr-3"
              >
                <div
                  className="emptyCenter img-fluid text-center ml-2 mt-2"
                >
                  <span>
                    <p
                      className="display-3"
                    >
                      No Center Found
                    </p>
                  </span>
                </div>
              </div>
              <div
                className="col-lg-3 p-2 ho"
              >
                <h2>
                  Notifications
                </h2>
              </div>
            </div>
          </div>,
          "id": "centers",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row wc"
            >
              <div
                className="col-lg-8 mr-3"
              >
                <div
                  className="emptyCenter img-fluid text-center ml-2 mt-2"
                >
                  <span>
                    <p
                      className="display-3"
                    >
                      No Center Found
                    </p>
                  </span>
                </div>
              </div>
              <div
                className="col-lg-3 p-2 ho"
              >
                <h2>
                  Notifications
                </h2>
              </div>
            </div>,
            "className": "section",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="col-lg-8 mr-3"
                >
                  <div
                    className="emptyCenter img-fluid text-center ml-2 mt-2"
                  >
                    <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>
                  </div>
                </div>,
                <div
                  className="col-lg-3 p-2 ho"
                >
                  <h2>
                    Notifications
                  </h2>
                </div>,
              ],
              "className": "row wc",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <div
                    className="emptyCenter img-fluid text-center ml-2 mt-2"
                  >
                    <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>
                  </div>,
                  "className": "col-lg-8 mr-3",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>,
                    "className": "emptyCenter img-fluid text-center ml-2 mt-2",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <p
                        className="display-3"
                      >
                        No Center Found
                      </p>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "No Center Found",
                        "className": "display-3",
                      },
                      "ref": null,
                      "rendered": "No Center Found",
                      "type": "p",
                    },
                    "type": "span",
                  },
                  "type": "div",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h2>
                      Notifications
                    </h2>,
                    Array [],
                  ],
                  "className": "col-lg-3 p-2 ho",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Notifications",
                    },
                    "ref": null,
                    "rendered": "Notifications",
                    "type": "h2",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "tour": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "content": <Delete
            onCancel={[Function]}
            onDelete={[Function]}
            title=""
          />,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="search-icon"
            id="search-centers"
          >
            <i
              className="fa fa-search"
            />
            <p
              className="tooltiptext"
            >
              Filter Centers
            </p>
          </div>,
          <div
            className="pagination-container"
            id="pagination-container"
          >
            <div>
               
              
            </div>
            <div
              className="inner-div"
            >
              <div
                id="goto-page"
                onClick={[Function]}
              >
                <input
                  className="form-control"
                  disabled={true}
                  id="current-page"
                  type="text"
                  value={NaN}
                />
              </div>
              <div
                className="inner-item-div"
                id="inner-item-div"
              >
                <div
                  className="inner-item"
                >
                  <input
                    className="form-control w-1 ml-1"
                    id="goto"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="inner-item"
                >
                  <input
                    className="btn btn-success page-btn ml-1"
                    onClick={[Function]}
                    type="button"
                    value="Go"
                  />
                </div>
              </div>
            </div>
            <div>
               
              
            </div>
          </div>,
          <div
            id="centers"
          >
            <div
              className="section"
            >
              <div
                className="row wc"
              >
                <div
                  className="col-lg-8 mr-3"
                >
                  <div
                    className="emptyCenter img-fluid text-center ml-2 mt-2"
                  >
                    <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>
                  </div>
                </div>
                <div
                  className="col-lg-3 p-2 ho"
                >
                  <h2>
                    Notifications
                  </h2>
                </div>
              </div>
            </div>
          </div>,
          <tour
            tour={[Function]}
          />,
          <DeleteModal
            content={
              <Delete
                onCancel={[Function]}
                onDelete={[Function]}
                title=""
              />
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <i
                className="fa fa-search"
              />,
              <p
                className="tooltiptext"
              >
                Filter Centers
              </p>,
            ],
            "className": "search-icon",
            "id": "search-centers",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "fa fa-search",
              },
              "ref": null,
              "rendered": null,
              "type": "i",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Filter Centers",
                "className": "tooltiptext",
              },
              "ref": null,
              "rendered": "Filter Centers",
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div>
                 
                
              </div>,
              <div
                className="inner-div"
              >
                <div
                  id="goto-page"
                  onClick={[Function]}
                >
                  <input
                    className="form-control"
                    disabled={true}
                    id="current-page"
                    type="text"
                    value={NaN}
                  />
                </div>
                <div
                  className="inner-item-div"
                  id="inner-item-div"
                >
                  <div
                    className="inner-item"
                  >
                    <input
                      className="form-control w-1 ml-1"
                      id="goto"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />
                  </div>
                  <div
                    className="inner-item"
                  >
                    <input
                      className="btn btn-success page-btn ml-1"
                      onClick={[Function]}
                      type="button"
                      value="Go"
                    />
                  </div>
                </div>
              </div>,
              <div>
                 
                
              </div>,
            ],
            "className": "pagination-container",
            "id": "pagination-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    id="goto-page"
                    onClick={[Function]}
                  >
                    <input
                      className="form-control"
                      disabled={true}
                      id="current-page"
                      type="text"
                      value={NaN}
                    />
                  </div>,
                  <div
                    className="inner-item-div"
                    id="inner-item-div"
                  >
                    <div
                      className="inner-item"
                    >
                      <input
                        className="form-control w-1 ml-1"
                        id="goto"
                        onChange={[Function]}
                        type="text"
                        value=""
                      />
                    </div>
                    <div
                      className="inner-item"
                    >
                      <input
                        className="btn btn-success page-btn ml-1"
                        onClick={[Function]}
                        type="button"
                        value="Go"
                      />
                    </div>
                  </div>,
                ],
                "className": "inner-div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <input
                      className="form-control"
                      disabled={true}
                      id="current-page"
                      type="text"
                      value={NaN}
                    />,
                    "id": "goto-page",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "form-control",
                      "disabled": true,
                      "id": "current-page",
                      "type": "text",
                      "value": NaN,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div
                        className="inner-item"
                      >
                        <input
                          className="form-control w-1 ml-1"
                          id="goto"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />
                      </div>,
                      <div
                        className="inner-item"
                      >
                        <input
                          className="btn btn-success page-btn ml-1"
                          onClick={[Function]}
                          type="button"
                          value="Go"
                        />
                      </div>,
                    ],
                    "className": "inner-item-div",
                    "id": "inner-item-div",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <input
                          className="form-control w-1 ml-1"
                          id="goto"
                          onChange={[Function]}
                          type="text"
                          value=""
                        />,
                        "className": "inner-item",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "form-control w-1 ml-1",
                          "id": "goto",
                          "onChange": [Function],
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <input
                          className="btn btn-success page-btn ml-1"
                          onClick={[Function]}
                          type="button"
                          value="Go"
                        />,
                        "className": "inner-item",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "btn btn-success page-btn ml-1",
                          "onClick": [Function],
                          "type": "button",
                          "value": "Go",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "",
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="section"
            >
              <div
                className="row wc"
              >
                <div
                  className="col-lg-8 mr-3"
                >
                  <div
                    className="emptyCenter img-fluid text-center ml-2 mt-2"
                  >
                    <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>
                  </div>
                </div>
                <div
                  className="col-lg-3 p-2 ho"
                >
                  <h2>
                    Notifications
                  </h2>
                </div>
              </div>
            </div>,
            "id": "centers",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="row wc"
              >
                <div
                  className="col-lg-8 mr-3"
                >
                  <div
                    className="emptyCenter img-fluid text-center ml-2 mt-2"
                  >
                    <span>
                      <p
                        className="display-3"
                      >
                        No Center Found
                      </p>
                    </span>
                  </div>
                </div>
                <div
                  className="col-lg-3 p-2 ho"
                >
                  <h2>
                    Notifications
                  </h2>
                </div>
              </div>,
              "className": "section",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="col-lg-8 mr-3"
                  >
                    <div
                      className="emptyCenter img-fluid text-center ml-2 mt-2"
                    >
                      <span>
                        <p
                          className="display-3"
                        >
                          No Center Found
                        </p>
                      </span>
                    </div>
                  </div>,
                  <div
                    className="col-lg-3 p-2 ho"
                  >
                    <h2>
                      Notifications
                    </h2>
                  </div>,
                ],
                "className": "row wc",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <div
                      className="emptyCenter img-fluid text-center ml-2 mt-2"
                    >
                      <span>
                        <p
                          className="display-3"
                        >
                          No Center Found
                        </p>
                      </span>
                    </div>,
                    "className": "col-lg-8 mr-3",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span>
                        <p
                          className="display-3"
                        >
                          No Center Found
                        </p>
                      </span>,
                      "className": "emptyCenter img-fluid text-center ml-2 mt-2",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="display-3"
                        >
                          No Center Found
                        </p>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "No Center Found",
                          "className": "display-3",
                        },
                        "ref": null,
                        "rendered": "No Center Found",
                        "type": "p",
                      },
                      "type": "span",
                    },
                    "type": "div",
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h2>
                        Notifications
                      </h2>,
                      Array [],
                    ],
                    "className": "col-lg-3 p-2 ho",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Notifications",
                      },
                      "ref": null,
                      "rendered": "Notifications",
                      "type": "h2",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "tour": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "content": <Delete
              onCancel={[Function]}
              onDelete={[Function]}
              title=""
            />,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
